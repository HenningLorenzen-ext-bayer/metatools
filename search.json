[{"path":"https://pharmaverse.github.io/metatools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 metatools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pharmaverse.github.io/metatools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christina Fillmore. Author, maintainer. GlaxoSmithKline LLC. Copyright holder, funder. F. Hoffmann-La Roche AG. Copyright holder, funder. Atorus Research LLC. Copyright holder, funder.","code":""},{"path":"https://pharmaverse.github.io/metatools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fillmore C (2022). metatools: Enable Use Metacore Help Create Check Dataset. R package version 0.1.0, https://pharmaverse.github.io/metatools.","code":"@Manual{,   title = {metatools: Enable the Use of Metacore to Help Create and Check Dataset},   author = {Christina Fillmore},   year = {2022},   note = {R package version 0.1.0},   url = {https://pharmaverse.github.io/metatools}, }"},{"path":"https://pharmaverse.github.io/metatools/index.html","id":"metatools-","dir":"","previous_headings":"","what":"Enable the Use of Metacore to Help Create and Check Dataset","title":"Enable the Use of Metacore to Help Create and Check Dataset","text":"goal metatools enable use metacore objects. Metatools can used build datasets enhance columns existing datasets well checking datasets metadata metacore.","code":""},{"path":"https://pharmaverse.github.io/metatools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Enable the Use of Metacore to Help Create and Check Dataset","text":"can install released version metatools GitHub : development version GitHub :","code":"install.packages(\"metatools\") # install.packages(\"devtools\") devtools::install_github(\"pharmaverse/metatools\")"},{"path":"https://pharmaverse.github.io/metatools/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Enable the Use of Metacore to Help Create and Check Dataset","text":"basic example functions build datasets create new columns. Metatools can also used run checks","code":"library(metatools) library(metacore) library(haven) library(magrittr) metacore <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings ds_list <- list(DM = read_xpt(metatools_example(\"dm.xpt\")))  build_from_derived(metacore, ds_list) %>% # To pull in columns from DM to be in ADSL    create_cat_var(metacore, AGE, AGEGR1, AGEGR1N) %>% #Add an AGEGR1 and AGEGR1N column    convert_var_to_fct(metacore, ETHNIC) # Change ETHNIC to as factor  #> # A tibble: 306 x 15 #>    STUDYID     USUBJID SUBJID SITEID TRT01P   AGE AGEU  RACE  SEX   ETHNIC DTHFL #>    <chr>       <chr>   <chr>  <chr>  <chr>  <dbl> <chr> <chr> <chr> <fct>  <chr> #>  1 CDISCPILOT~ 01-701~ 1015   701    Place~    63 YEARS WHITE F     HISPA~ \"\"    #>  2 CDISCPILOT~ 01-701~ 1023   701    Place~    64 YEARS WHITE M     HISPA~ \"\"    #>  3 CDISCPILOT~ 01-701~ 1028   701    Xanom~    71 YEARS WHITE M     NOT H~ \"\"    #>  4 CDISCPILOT~ 01-701~ 1033   701    Xanom~    74 YEARS WHITE M     NOT H~ \"\"    #>  5 CDISCPILOT~ 01-701~ 1034   701    Xanom~    77 YEARS WHITE F     NOT H~ \"\"    #>  6 CDISCPILOT~ 01-701~ 1047   701    Place~    85 YEARS WHITE F     NOT H~ \"\"    #>  7 CDISCPILOT~ 01-701~ 1057   701    Scree~    59 YEARS WHITE F     HISPA~ \"\"    #>  8 CDISCPILOT~ 01-701~ 1097   701    Xanom~    68 YEARS WHITE M     NOT H~ \"\"    #>  9 CDISCPILOT~ 01-701~ 1111   701    Xanom~    81 YEARS WHITE F     NOT H~ \"\"    #> 10 CDISCPILOT~ 01-701~ 1115   701    Xanom~    84 YEARS WHITE M     NOT H~ \"\"    #> # ... with 296 more rows, and 4 more variables: RFSTDTC <chr>, RFENDTC <chr>, #> #   AGEGR1 <chr>, AGEGR1N <chr> data <- read_xpt(metatools_example(\"adsl.xpt\")) #Checking all values are in the control terminology for just TRT01PN check_ct_col(data, metacore, TRT01PN) #> [1] TRUE #Checking all values are in the control terminology for all variables  check_ct_data(data, metacore, TRUE) #> [1] TRUE # Check all variables in the metadata are in the dataset and there aren't any extra columns  check_variables(data, metacore) #> No missing or extra variables #> [1] TRUE"},{"path":"https://pharmaverse.github.io/metatools/reference/build_from_derived.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a dataset from derived — build_from_derived","title":"Build a dataset from derived — build_from_derived","text":"function builds dataset columns just need pulled . variable derivation format 'dataset.variable' pulled create new dataset. columns often called 'Predecessors' ADaM, universal optional specify.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/build_from_derived.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a dataset from derived — build_from_derived","text":"","code":"build_from_derived(   metacore,   ds_list,   dataset_name = NULL,   predecessor_only = FALSE )"},{"path":"https://pharmaverse.github.io/metatools/reference/build_from_derived.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a dataset from derived — build_from_derived","text":"metacore Metacore object contains specifications dataset interest. ds_list Named list datasets needed build dataset_name Optional string specify dataset. needed metacore object provided already subsetted. predecessor_only default `FALSE`, `TRUE` use derivations origin 'Predecessor'","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/build_from_derived.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a dataset from derived — build_from_derived","text":"datset","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/build_from_derived.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a dataset from derived — build_from_derived","text":"","code":"library(metacore) library(haven) library(magrittr) metacore <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings ds_list <- list(DM = read_xpt(metatools_example(\"dm.xpt\"))) build_from_derived(metacore, ds_list) #> # A tibble: 306 × 13 #>    STUDYID     USUBJID SUBJID SITEID TRT01P   AGE AGEU  RACE  SEX   ETHNIC DTHFL #>    <chr>       <chr>   <chr>  <chr>  <chr>  <dbl> <chr> <chr> <chr> <chr>  <chr> #>  1 CDISCPILOT… 01-701… 1015   701    Place…    63 YEARS WHITE F     HISPA… \"\"    #>  2 CDISCPILOT… 01-701… 1023   701    Place…    64 YEARS WHITE M     HISPA… \"\"    #>  3 CDISCPILOT… 01-701… 1028   701    Xanom…    71 YEARS WHITE M     NOT H… \"\"    #>  4 CDISCPILOT… 01-701… 1033   701    Xanom…    74 YEARS WHITE M     NOT H… \"\"    #>  5 CDISCPILOT… 01-701… 1034   701    Xanom…    77 YEARS WHITE F     NOT H… \"\"    #>  6 CDISCPILOT… 01-701… 1047   701    Place…    85 YEARS WHITE F     NOT H… \"\"    #>  7 CDISCPILOT… 01-701… 1057   701    Scree…    59 YEARS WHITE F     HISPA… \"\"    #>  8 CDISCPILOT… 01-701… 1097   701    Xanom…    68 YEARS WHITE M     NOT H… \"\"    #>  9 CDISCPILOT… 01-701… 1111   701    Xanom…    81 YEARS WHITE F     NOT H… \"\"    #> 10 CDISCPILOT… 01-701… 1115   701    Xanom…    84 YEARS WHITE M     NOT H… \"\"    #> # … with 296 more rows, and 2 more variables: RFSTDTC <chr>, RFENDTC <chr>"},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Control Terminology for a Single Column — check_ct_col","title":"Check Control Terminology for a Single Column — check_ct_col","text":"function checks column dataset contains control terminology defined metacore specification","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Control Terminology for a Single Column — check_ct_col","text":"","code":"check_ct_col(data, metacore, var, na_acceptable = FALSE)"},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Control Terminology for a Single Column — check_ct_col","text":"data Data check metacore metacore object get codelist . variable different codelists different datasets metacore object need subsetted using `select_dataset` metacore package. var Name variable check na_acceptable Logical value, set `FALSE` default, meaning missing values acceptable. set `TRUE` pass check values control terminology missing","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Control Terminology for a Single Column — check_ct_col","text":"logical value, `TRUE` passes `FALSE` fails","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Control Terminology for a Single Column — check_ct_col","text":"","code":"library(metacore) library(haven) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) check_ct_col(data, spec, TRT01PN) #> [1] TRUE check_ct_col(data, spec, \"TRT01PN\") #> [1] TRUE"},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Control Terminology for a Dataset — check_ct_data","title":"Check Control Terminology for a Dataset — check_ct_data","text":"function checks columns dataset contains control terminology defined metacore specification","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Control Terminology for a Dataset — check_ct_data","text":"","code":"check_ct_data(data, metacore, na_acceptable = FALSE)"},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Control Terminology for a Dataset — check_ct_data","text":"data Dataset check metacore Metacore object contains specifications dataset interest. variable different codelists different datasets metacore object need subsetted using `select_dataset` metacore package. na_acceptable Logical value, set `FALSE` default, meaning missing values acceptable. set `TRUE` pass check values control terminology missing","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Control Terminology for a Dataset — check_ct_data","text":"`TRUE` columns pass. error otherwise","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_ct_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Control Terminology for a Dataset — check_ct_data","text":"","code":"library(haven) library(metacore) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) check_ct_data(data, spec, TRUE) #> [1] TRUE"},{"path":"https://pharmaverse.github.io/metatools/reference/check_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Variable Names — check_variables","title":"Check Variable Names — check_variables","text":"function checks variables dataset variables defined metacore specifications. everything matches function return `TRUE` message starting everything expected. additional missing variables error explain discrepancies","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Variable Names — check_variables","text":"","code":"check_variables(data, metacore, dataset_name = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/check_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Variable Names — check_variables","text":"data Dataset check metacore Metacore object contains specifications dataset interest. dataset_name Optional string specify dataset. needed metacore object provided already subsetted.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Variable Names — check_variables","text":"message dataset matches specification, error otherwise","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/check_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Variable Names — check_variables","text":"","code":"library(haven) library(metacore) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) check_variables(data, spec) #> No missing or extra variables #> [1] TRUE"},{"path":"https://pharmaverse.github.io/metatools/reference/convert_var_to_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","title":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","text":"functions takes dataset, metacore object variable name. looks metacore object control terms given variable uses convert variable factor levels. control terminology code list, code column used. function fails control terminology external library","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/convert_var_to_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","text":"","code":"convert_var_to_fct(data, metacore, var)"},{"path":"https://pharmaverse.github.io/metatools/reference/convert_var_to_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","text":"data dataset containing variable modified metacore metacore object get codelist . variable different codelists different datasets metacore object need subsetted using `select_dataset` metacore package var Name variable change","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/convert_var_to_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","text":"Dataset variable changed factor","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/convert_var_to_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Variable to Factor with Levels Set by Control Terms — convert_var_to_fct","text":"","code":"library(metacore) library(haven) library(magrittr) spec <- spec_to_metacore(metacore_example(\"p21_mock.xlsx\"), quiet = TRUE) #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings dm <- read_xpt(metatools_example(\"dm.xpt\")) # Variable with codelist control terms convert_var_to_fct(dm, spec, SEX) #> # A tibble: 306 × 25 #>    STUDYID      DOMAIN USUBJID  SUBJID RFSTDTC RFENDTC RFXSTDTC RFXENDTC RFICDTC #>    <chr>        <chr>  <chr>    <chr>  <chr>   <chr>   <chr>    <chr>    <chr>   #>  1 CDISCPILOT01 DM     01-701-… 1015   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  2 CDISCPILOT01 DM     01-701-… 1023   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #>  3 CDISCPILOT01 DM     01-701-… 1028   \"2013-… \"2014-… \"2013-0… \"2014-0… \"\"      #>  4 CDISCPILOT01 DM     01-701-… 1033   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  5 CDISCPILOT01 DM     01-701-… 1034   \"2014-… \"2014-… \"2014-0… \"2014-1… \"\"      #>  6 CDISCPILOT01 DM     01-701-… 1047   \"2013-… \"2013-… \"2013-0… \"2013-0… \"\"      #>  7 CDISCPILOT01 DM     01-701-… 1057   \"\"      \"\"      \"\"       \"\"       \"\"      #>  8 CDISCPILOT01 DM     01-701-… 1097   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  9 CDISCPILOT01 DM     01-701-… 1111   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #> 10 CDISCPILOT01 DM     01-701-… 1115   \"2012-… \"2013-… \"2012-1… \"2013-0… \"\"      #> # … with 296 more rows, and 16 more variables: RFPENDTC <chr>, DTHDTC <chr>, #> #   DTHFL <chr>, SITEID <chr>, AGE <dbl>, AGEU <chr>, SEX <fct>, RACE <chr>, #> #   ETHNIC <chr>, ARMCD <chr>, ARM <chr>, ACTARMCD <chr>, ACTARM <chr>, #> #   COUNTRY <chr>, DMDTC <chr>, DMDY <dbl> # Variable with permitted value control terms convert_var_to_fct(dm, spec, ARM) #> # A tibble: 306 × 25 #>    STUDYID      DOMAIN USUBJID  SUBJID RFSTDTC RFENDTC RFXSTDTC RFXENDTC RFICDTC #>    <chr>        <chr>  <chr>    <chr>  <chr>   <chr>   <chr>    <chr>    <chr>   #>  1 CDISCPILOT01 DM     01-701-… 1015   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  2 CDISCPILOT01 DM     01-701-… 1023   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #>  3 CDISCPILOT01 DM     01-701-… 1028   \"2013-… \"2014-… \"2013-0… \"2014-0… \"\"      #>  4 CDISCPILOT01 DM     01-701-… 1033   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  5 CDISCPILOT01 DM     01-701-… 1034   \"2014-… \"2014-… \"2014-0… \"2014-1… \"\"      #>  6 CDISCPILOT01 DM     01-701-… 1047   \"2013-… \"2013-… \"2013-0… \"2013-0… \"\"      #>  7 CDISCPILOT01 DM     01-701-… 1057   \"\"      \"\"      \"\"       \"\"       \"\"      #>  8 CDISCPILOT01 DM     01-701-… 1097   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  9 CDISCPILOT01 DM     01-701-… 1111   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #> 10 CDISCPILOT01 DM     01-701-… 1115   \"2012-… \"2013-… \"2012-1… \"2013-0… \"\"      #> # … with 296 more rows, and 16 more variables: RFPENDTC <chr>, DTHDTC <chr>, #> #   DTHFL <chr>, SITEID <chr>, AGE <dbl>, AGEU <chr>, SEX <chr>, RACE <chr>, #> #   ETHNIC <chr>, ARMCD <chr>, ARM <fct>, ACTARMCD <chr>, ACTARM <chr>, #> #   COUNTRY <chr>, DMDTC <chr>, DMDY <dbl>"},{"path":"https://pharmaverse.github.io/metatools/reference/create_cat_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Categorical Variable from Codelist — create_cat_var","title":"Create Categorical Variable from Codelist — create_cat_var","text":"Using grouping either `decode_var` `code_var` reference variable (`ref_var`) create categorical variable numeric version categorical variable.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_cat_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Categorical Variable from Codelist — create_cat_var","text":"","code":"create_cat_var(data, metacore, ref_var, grp_var, num_grp_var = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/create_cat_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Categorical Variable from Codelist — create_cat_var","text":"data Dataset reference variable metacore metacore object get codelist . variable different codelists different datasets metacore object need subsetted using `select_dataset` metacore package. ref_var Name variable used reference .e AGE creating AGEGR1 grp_var Name new grouped variable num_grp_var Name new numeric decode grouped variable. optional value given variable created","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_cat_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Categorical Variable from Codelist — create_cat_var","text":"dataset new column added","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_cat_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Categorical Variable from Codelist — create_cat_var","text":"","code":"library(metacore) library(haven) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings dm <- read_xpt(metatools_example(\"dm.xpt\")) # Grouping Column Only create_cat_var(dm, spec, AGE, AGEGR1) #> # A tibble: 306 × 26 #>    STUDYID      DOMAIN USUBJID  SUBJID RFSTDTC RFENDTC RFXSTDTC RFXENDTC RFICDTC #>    <chr>        <chr>  <chr>    <chr>  <chr>   <chr>   <chr>    <chr>    <chr>   #>  1 CDISCPILOT01 DM     01-701-… 1015   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  2 CDISCPILOT01 DM     01-701-… 1023   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #>  3 CDISCPILOT01 DM     01-701-… 1028   \"2013-… \"2014-… \"2013-0… \"2014-0… \"\"      #>  4 CDISCPILOT01 DM     01-701-… 1033   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  5 CDISCPILOT01 DM     01-701-… 1034   \"2014-… \"2014-… \"2014-0… \"2014-1… \"\"      #>  6 CDISCPILOT01 DM     01-701-… 1047   \"2013-… \"2013-… \"2013-0… \"2013-0… \"\"      #>  7 CDISCPILOT01 DM     01-701-… 1057   \"\"      \"\"      \"\"       \"\"       \"\"      #>  8 CDISCPILOT01 DM     01-701-… 1097   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  9 CDISCPILOT01 DM     01-701-… 1111   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #> 10 CDISCPILOT01 DM     01-701-… 1115   \"2012-… \"2013-… \"2012-1… \"2013-0… \"\"      #> # … with 296 more rows, and 17 more variables: RFPENDTC <chr>, DTHDTC <chr>, #> #   DTHFL <chr>, SITEID <chr>, AGE <dbl>, AGEU <chr>, SEX <chr>, RACE <chr>, #> #   ETHNIC <chr>, ARMCD <chr>, ARM <chr>, ACTARMCD <chr>, ACTARM <chr>, #> #   COUNTRY <chr>, DMDTC <chr>, DMDY <dbl>, AGEGR1 <chr> # Grouping Column and Numeric Decode create_cat_var(dm, spec, AGE, AGEGR1, AGEGR1N) #> # A tibble: 306 × 27 #>    STUDYID      DOMAIN USUBJID  SUBJID RFSTDTC RFENDTC RFXSTDTC RFXENDTC RFICDTC #>    <chr>        <chr>  <chr>    <chr>  <chr>   <chr>   <chr>    <chr>    <chr>   #>  1 CDISCPILOT01 DM     01-701-… 1015   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  2 CDISCPILOT01 DM     01-701-… 1023   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #>  3 CDISCPILOT01 DM     01-701-… 1028   \"2013-… \"2014-… \"2013-0… \"2014-0… \"\"      #>  4 CDISCPILOT01 DM     01-701-… 1033   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  5 CDISCPILOT01 DM     01-701-… 1034   \"2014-… \"2014-… \"2014-0… \"2014-1… \"\"      #>  6 CDISCPILOT01 DM     01-701-… 1047   \"2013-… \"2013-… \"2013-0… \"2013-0… \"\"      #>  7 CDISCPILOT01 DM     01-701-… 1057   \"\"      \"\"      \"\"       \"\"       \"\"      #>  8 CDISCPILOT01 DM     01-701-… 1097   \"2014-… \"2014-… \"2014-0… \"2014-0… \"\"      #>  9 CDISCPILOT01 DM     01-701-… 1111   \"2012-… \"2012-… \"2012-0… \"2012-0… \"\"      #> 10 CDISCPILOT01 DM     01-701-… 1115   \"2012-… \"2013-… \"2012-1… \"2013-0… \"\"      #> # … with 296 more rows, and 18 more variables: RFPENDTC <chr>, DTHDTC <chr>, #> #   DTHFL <chr>, SITEID <chr>, AGE <dbl>, AGEU <chr>, SEX <chr>, RACE <chr>, #> #   ETHNIC <chr>, ARMCD <chr>, ARM <chr>, ACTARMCD <chr>, ACTARM <chr>, #> #   COUNTRY <chr>, DMDTC <chr>, DMDY <dbl>, AGEGR1 <chr>, AGEGR1N <chr>"},{"path":"https://pharmaverse.github.io/metatools/reference/create_subgrps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Subgroups — create_subgrps","title":"Create Subgroups — create_subgrps","text":"Create Subgroups","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_subgrps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Subgroups — create_subgrps","text":"","code":"create_subgrps(ref_vec, grp_defs)"},{"path":"https://pharmaverse.github.io/metatools/reference/create_subgrps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Subgroups — create_subgrps","text":"ref_vec Vector numeric values grp_defs Vector strings groupings defined. Format must either: <00, >=00, 00-00,  00-<00","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_subgrps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Subgroups — create_subgrps","text":"Character vector values subgroups","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_subgrps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Subgroups — create_subgrps","text":"","code":"create_subgrps(c(1:10), c(\"<2\", \"2-5\", \">5\")) #>  [1] \"<2\"  \"2-5\" \"2-5\" \"2-5\" \"2-5\" \">5\"  \">5\"  \">5\"  \">5\"  \">5\"  create_subgrps(c(1:10), c(\"<=2\", \">2-5\", \">5\")) #>  [1] \"<=2\"  \"<=2\"  \">2-5\" \">2-5\" \">2-5\" \">5\"   \">5\"   \">5\"   \">5\"   \">5\"   create_subgrps(c(1:10), c(\"<2\", \"2-<5\", \">=5\")) #>  [1] \"<2\"   \"2-<5\" \"2-<5\" \"2-<5\" \">=5\"  \">=5\"  \">=5\"  \">=5\"  \">=5\"  \">=5\""},{"path":"https://pharmaverse.github.io/metatools/reference/create_var_from_codelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Variable from Codelist — create_var_from_codelist","title":"Create Variable from Codelist — create_var_from_codelist","text":"functions uses code/decode pairs metacore object create new variables data","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_var_from_codelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Variable from Codelist — create_var_from_codelist","text":"","code":"create_var_from_codelist(   data,   metacore,   input_var,   out_var,   decode_to_code = TRUE )"},{"path":"https://pharmaverse.github.io/metatools/reference/create_var_from_codelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Variable from Codelist — create_var_from_codelist","text":"data Dataset contains input variable metacore metacore object get codelist . `out_var` different codelists different datasets metacore object need subsetted using `select_dataset` metacore package. input_var Name variable translated new column out_var Name output variable. Note: codelist always codelist associates `out_var` decode_to_code Direction translation. default assumes `input_var` decode column codelist. Set `FALSE` `input_var` code column codelist","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_var_from_codelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Variable from Codelist — create_var_from_codelist","text":"Dataset new column added","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/create_var_from_codelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Variable from Codelist — create_var_from_codelist","text":"","code":"library(metacore) library(tibble) data <- tribble(   ~USUBJID, ~VAR1, ~VAR2,   1, \"M\", \"Male\",   2, \"F\", \"Female\",   3, \"F\", \"Female\",   4, \"U\", \"Unknown\",   5, \"M\", \"Male\", ) spec <- spec_to_metacore(metacore_example(\"p21_mock.xlsx\"), quiet = TRUE) #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings create_var_from_codelist(data, spec, VAR2, SEX) #> # A tibble: 5 × 4 #>   USUBJID VAR1  VAR2    SEX   #>     <dbl> <chr> <chr>   <chr> #> 1       1 M     Male    M     #> 2       2 F     Female  F     #> 3       3 F     Female  F     #> 4       4 U     Unknown U     #> 5       5 M     Male    M     create_var_from_codelist(data, spec, \"VAR2\", \"SEX\") #> # A tibble: 5 × 4 #>   USUBJID VAR1  VAR2    SEX   #>     <dbl> <chr> <chr>   <chr> #> 1       1 M     Male    M     #> 2       2 F     Female  F     #> 3       3 F     Female  F     #> 4       4 U     Unknown U     #> 5       5 M     Male    M     create_var_from_codelist(data, spec, VAR1, SEX, decode_to_code = FALSE) #> # A tibble: 5 × 4 #>   USUBJID VAR1  VAR2    SEX     #>     <dbl> <chr> <chr>   <chr>   #> 1       1 M     Male    Male    #> 2       2 F     Female  Female  #> 3       3 F     Female  Female  #> 4       4 U     Unknown Unknown #> 5       5 M     Male    Male"},{"path":"https://pharmaverse.github.io/metatools/reference/drop_unspec_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Unspecified Variables — drop_unspec_vars","title":"Drop Unspecified Variables — drop_unspec_vars","text":"function drops unspcifed variables. throw error dataset contain expected variables.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/drop_unspec_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Unspecified Variables — drop_unspec_vars","text":"","code":"drop_unspec_vars(dataset, metacore, dataset_name = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/drop_unspec_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Unspecified Variables — drop_unspec_vars","text":"dataset Dataset change metacore Metacore object contains specifications dataset interest. dataset_name Optional string specify dataset. needed metacore object provided already subsetted.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/drop_unspec_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop Unspecified Variables — drop_unspec_vars","text":"Dataset specified columns","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/drop_unspec_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop Unspecified Variables — drop_unspec_vars","text":"","code":"library(metacore) library(haven) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union metacore <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) %>%   mutate(foo = \"Hello\") drop_unspec_vars(data, metacore) #> # A tibble: 254 × 50 #>    STUDYID     USUBJID SUBJID SITEID SITEGR1 ARM   TRT01P TRT01PN TRT01A TRT01AN #>    <chr>       <chr>   <chr>  <chr>  <chr>   <chr> <chr>    <dbl> <chr>    <dbl> #>  1 CDISCPILOT… 01-701… 1015   701    701     Plac… Place…       0 Place…       0 #>  2 CDISCPILOT… 01-701… 1023   701    701     Plac… Place…       0 Place…       0 #>  3 CDISCPILOT… 01-701… 1028   701    701     Xano… Xanom…      81 Xanom…      81 #>  4 CDISCPILOT… 01-701… 1033   701    701     Xano… Xanom…      54 Xanom…      54 #>  5 CDISCPILOT… 01-701… 1034   701    701     Xano… Xanom…      81 Xanom…      81 #>  6 CDISCPILOT… 01-701… 1047   701    701     Plac… Place…       0 Place…       0 #>  7 CDISCPILOT… 01-701… 1097   701    701     Xano… Xanom…      54 Xanom…      54 #>  8 CDISCPILOT… 01-701… 1111   701    701     Xano… Xanom…      54 Xanom…      54 #>  9 CDISCPILOT… 01-701… 1115   701    701     Xano… Xanom…      54 Xanom…      54 #> 10 CDISCPILOT… 01-701… 1118   701    701     Plac… Place…       0 Place…       0 #> # … with 244 more rows, and 40 more variables: TRTSDT <date>, TRTEDT <date>, #> #   TRTDURD <dbl>, AVGDD <dbl>, CUMDOSE <dbl>, AGE <dbl>, AGEGR1 <chr>, #> #   AGEGR1N <dbl>, AGEU <chr>, RACE <chr>, RACEN <dbl>, SEX <chr>, #> #   ETHNIC <chr>, SAFFL <chr>, ITTFL <chr>, EFFFL <chr>, COMP8FL <chr>, #> #   COMP16FL <chr>, COMP24FL <chr>, DISCONFL <chr>, DSRAEFL <chr>, DTHFL <chr>, #> #   BMIBL <dbl>, BMIBLGR1 <chr>, HEIGHTBL <dbl>, WEIGHTBL <dbl>, EDUCLVL <dbl>, #> #   DISONSDT <date>, DURDIS <dbl>, DURDSGR1 <chr>, VISIT1DT <date>, …"},{"path":"https://pharmaverse.github.io/metatools/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions to get variables from a dataset list — get_variables","title":"Internal functions to get variables from a dataset list — get_variables","text":"function used `build_from_derived` build dataset columns pulled directly datasets","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions to get variables from a dataset list — get_variables","text":"","code":"get_variables(x, ds_list)"},{"path":"https://pharmaverse.github.io/metatools/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions to get variables from a dataset list — get_variables","text":"x Dataset old new variable name dataset name ds_list List datasets","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal functions to get variables from a dataset list — get_variables","text":"datasets","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/metatools_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to pkg example — metatools_example","title":"Get path to pkg example — metatools_example","text":"pkg comes bundled number sample files `inst/extdata` directory. function make easy access","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/metatools_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to pkg example — metatools_example","text":"","code":"metatools_example(file = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/metatools_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to pkg example — metatools_example","text":"file Name file. `NULL`, example files listed.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/metatools_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to pkg example — metatools_example","text":"","code":"metatools_example() #> [1] \"adsl.xpt\" \"dm.xpt\"   metatools_example(\"dm.xpt\") #> [1] \"/home/runner/work/_temp/Library/metatools/extdata/dm.xpt\""},{"path":"https://pharmaverse.github.io/metatools/reference/order_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort Columns by Order — order_cols","title":"Sort Columns by Order — order_cols","text":"function sorts dataset according order found metacore object.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/order_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort Columns by Order — order_cols","text":"","code":"order_cols(data, metacore, dataset_name = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/order_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort Columns by Order — order_cols","text":"data Dataset sort metacore Metacore object contains specifications dataset interest. dataset_name Optional string specify dataset. needed metacore object provided already subsetted.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/order_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort Columns by Order — order_cols","text":"dataset ordered columns","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/order_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort Columns by Order — order_cols","text":"","code":"library(metacore) library(haven) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) order_cols(data, spec) #> # A tibble: 254 × 49 #>    STUDYID     USUBJID SUBJID SITEID SITEGR1 ARM   TRT01P TRT01PN TRT01A TRT01AN #>    <chr>       <chr>   <chr>  <chr>  <chr>   <chr> <chr>    <dbl> <chr>    <dbl> #>  1 CDISCPILOT… 01-701… 1015   701    701     Plac… Place…       0 Place…       0 #>  2 CDISCPILOT… 01-701… 1023   701    701     Plac… Place…       0 Place…       0 #>  3 CDISCPILOT… 01-701… 1028   701    701     Xano… Xanom…      81 Xanom…      81 #>  4 CDISCPILOT… 01-701… 1033   701    701     Xano… Xanom…      54 Xanom…      54 #>  5 CDISCPILOT… 01-701… 1034   701    701     Xano… Xanom…      81 Xanom…      81 #>  6 CDISCPILOT… 01-701… 1047   701    701     Plac… Place…       0 Place…       0 #>  7 CDISCPILOT… 01-701… 1097   701    701     Xano… Xanom…      54 Xanom…      54 #>  8 CDISCPILOT… 01-701… 1111   701    701     Xano… Xanom…      54 Xanom…      54 #>  9 CDISCPILOT… 01-701… 1115   701    701     Xano… Xanom…      54 Xanom…      54 #> 10 CDISCPILOT… 01-701… 1118   701    701     Plac… Place…       0 Place…       0 #> # … with 244 more rows, and 39 more variables: TRTSDT <date>, TRTEDT <date>, #> #   TRTDURD <dbl>, AVGDD <dbl>, CUMDOSE <dbl>, AGE <dbl>, AGEGR1 <chr>, #> #   AGEGR1N <dbl>, AGEU <chr>, RACE <chr>, RACEN <dbl>, SEX <chr>, #> #   ETHNIC <chr>, SAFFL <chr>, ITTFL <chr>, EFFFL <chr>, COMP8FL <chr>, #> #   COMP16FL <chr>, COMP24FL <chr>, DISCONFL <chr>, DSRAEFL <chr>, DTHFL <chr>, #> #   BMIBL <dbl>, BMIBLGR1 <chr>, HEIGHTBL <dbl>, WEIGHTBL <dbl>, EDUCLVL <dbl>, #> #   DISONSDT <date>, DURDIS <dbl>, DURDSGR1 <chr>, VISIT1DT <date>, …"},{"path":"https://pharmaverse.github.io/metatools/reference/sort_by_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort Rows by Key Sequence — sort_by_key","title":"Sort Rows by Key Sequence — sort_by_key","text":"function sorts dataset according key sequence found metacore object.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/sort_by_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort Rows by Key Sequence — sort_by_key","text":"","code":"sort_by_key(data, metacore, dataset_name = NULL)"},{"path":"https://pharmaverse.github.io/metatools/reference/sort_by_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort Rows by Key Sequence — sort_by_key","text":"data Dataset sort metacore Metacore object contains specifications dataset interest. dataset_name Optional string specify dataset. needed metacore object provided already subsetted.","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/sort_by_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort Rows by Key Sequence — sort_by_key","text":"dataset ordered columns","code":""},{"path":"https://pharmaverse.github.io/metatools/reference/sort_by_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort Rows by Key Sequence — sort_by_key","text":"","code":"library(metacore) library(haven) library(magrittr) spec <- define_to_metacore(metacore_example(\"ADaM_define.xml\"), quiet = TRUE) %>%   select_dataset(\"ADSL\") #>  #>  Metadata successfully imported #> Loading in metacore object with suppressed warnings data <- read_xpt(metatools_example(\"adsl.xpt\")) sort_by_key (data, spec) #> # A tibble: 254 × 49 #>    STUDYID     USUBJID SUBJID SITEID SITEGR1 ARM   TRT01P TRT01PN TRT01A TRT01AN #>    <chr>       <chr>   <chr>  <chr>  <chr>   <chr> <chr>    <dbl> <chr>    <dbl> #>  1 CDISCPILOT… 01-701… 1015   701    701     Plac… Place…       0 Place…       0 #>  2 CDISCPILOT… 01-701… 1023   701    701     Plac… Place…       0 Place…       0 #>  3 CDISCPILOT… 01-701… 1028   701    701     Xano… Xanom…      81 Xanom…      81 #>  4 CDISCPILOT… 01-701… 1033   701    701     Xano… Xanom…      54 Xanom…      54 #>  5 CDISCPILOT… 01-701… 1034   701    701     Xano… Xanom…      81 Xanom…      81 #>  6 CDISCPILOT… 01-701… 1047   701    701     Plac… Place…       0 Place…       0 #>  7 CDISCPILOT… 01-701… 1097   701    701     Xano… Xanom…      54 Xanom…      54 #>  8 CDISCPILOT… 01-701… 1111   701    701     Xano… Xanom…      54 Xanom…      54 #>  9 CDISCPILOT… 01-701… 1115   701    701     Xano… Xanom…      54 Xanom…      54 #> 10 CDISCPILOT… 01-701… 1118   701    701     Plac… Place…       0 Place…       0 #> # … with 244 more rows, and 39 more variables: TRTSDT <date>, TRTEDT <date>, #> #   TRTDURD <dbl>, AVGDD <dbl>, CUMDOSE <dbl>, AGE <dbl>, AGEGR1 <chr>, #> #   AGEGR1N <dbl>, AGEU <chr>, RACE <chr>, RACEN <dbl>, SEX <chr>, #> #   ETHNIC <chr>, SAFFL <chr>, ITTFL <chr>, EFFFL <chr>, COMP8FL <chr>, #> #   COMP16FL <chr>, COMP24FL <chr>, DISCONFL <chr>, DSRAEFL <chr>, DTHFL <chr>, #> #   BMIBL <dbl>, BMIBLGR1 <chr>, HEIGHTBL <dbl>, WEIGHTBL <dbl>, EDUCLVL <dbl>, #> #   DISONSDT <date>, DURDIS <dbl>, DURDSGR1 <chr>, VISIT1DT <date>, …"}]
